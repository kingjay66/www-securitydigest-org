VIRUS-L Digest   Thursday, 20 Dec 1990    Volume 3 : Issue 205

Today's Topics:

Viruses for the holidays & admin note
Re: Virus on magazine disk ??? (Not stoned)
RE: Job Market (PC)
Virus protection (PC)
Re: Musicbug virus (PC)
Re: *NIX virus... necessary knowledge. (UNIX)
File/Boot viruses
Possibly a new virus (PC)
Re: Viruses surviving warm boots. (PC)
Re: *NIX virus... necessary knowledge. (UNIX)

VIRUS-L is a moderated, digested mail forum for discussing computer
virus issues; comp.virus is a non-digested Usenet counterpart.
Discussions are not limited to any one hardware/software platform -
diversity is welcomed.  Contributions should be relevant, concise,
polite, etc.  Please sign submissions with your real name.  Send
contributions to VIRUS-L@IBM1.CC.LEHIGH.EDU (that's equivalent to
VIRUS-L at LEHIIBM1 for you BITNET folks).  Information on accessing
anti-virus, documentation, and back-issue archives is distributed
periodically on the list.  Administrative mail (comments, suggestions,
and so forth) should be sent to me at: krvw@CERT.SEI.CMU.EDU.

   Ken van Wyk

---------------------------------------------------------------------------

Date:    Thu, 20 Dec 90 08:09:05 -0500
From:    Kenneth R. van Wyk <krvw@cert.sei.cmu.edu>
Subject: Viruses for the holidays & admin note

While shopping for holiday gifts for my nephews and niece, I found a
toy called Virus Warriors (I could be wrong on the exact name, but
that's the gist of it).  I'm not making this up!  The box said
something to the extent of, "A top secret government lab has
accidentally released evil computer viruses.  Their goal is to take
over all the world's computers...even YOURS!"  The toy was this
sinister looking doll with "computer circuitry" on its back.  Again,
I'M NOT MAKING THIS UP!

Indeed, there is gold in them hills.

Also, it was noted that the SECURITY mailing list at Rutgers is also
gatewayed to the misc.security Usenet newsgroup.  So, those who get
the news may want to read the group rather than subscribe to the list.

Cheers,

Ken van Wyk

P.S. No, I didn't buy it.  :-)

------------------------------

Date:    Wed, 19 Dec 90 17:18:16 +0700
From:    James Nash <ccx020@cck.coventry.ac.uk>
Subject: Re: Virus on magazine disk ??? (Not stoned)

I sent this message to the original poster and thought it would be of
wider interest.

 > Subject: Stoned on widely distributed disk (PC)
 >
 > WARNING: Stoned virus found on demo disk included "WHAT PERSONAL
 > COMPUTER" (United Kingdom) issue 18, Jan 1991.
 > ....
 > certified by the magazine as being VIRUS-FREE.

The magazine is certified as being free of 'known viruses'. Certainly,
the copy I just bought is Stoned-free. Fridrik's F-DISINF does say it
could be a new boot virus as it is an unusual boot sector. I've looked
at the boot sector and that has a couple of messages ("Cannot find
file" and "Loading...") as well as other hex stuff I cannot decipher.

This could be a boot sector written by the magazine but the
instructions to run the demo disk say nothing about booting from it. I
tried booting from the disk on a hard-diskless machine and the "Cannot
find file" came up.

I think you probably had Stoned before you used the magazine disk but all
the same there is something interesting on it.
- --
James Nash, Computing Services, Coventry Polytechnic, England
ccx020@uk.ac.cov.cck

------------------------------

Date:    Thu, 20 Dec 90 08:20:00 -0800
From:    jmolini@nasamail.nasa.gov (James E. Molini)
Subject: RE: Job Market (PC)

  DRAGON@RCN.BITNET writes:

>...  What kind of job market is there for computer programmers who
>specialize on detecting and eliminating viruses from other systems?
>Is it a job that one can make a decent living at?  What languages
>(Computer) are best suited for combatting viruses?  And who
>(Corporations) would hire a computer anti-hacker?  Thanks for all
>your help.

Since I think Dave Chess answered the other half of your posting, let
me take a stab at this one.

You could probably make more money writing Dungeons & Dragons computer
games than you could being a computer cop.  So the real question
becomes, "Do you want to get rich in computer security, or do you just
want to make a decent living?"

From what I have seen over the years, anyone who ever loaded a key
into a piece of crypto gear has called themselves a Computer Security
Expert at one time or another.  We are also seeing a lot of ex-
military intelligence types in the area as well.  These people are
fading away as the field becomes more complex.  But we also have a new
influx of "talent." These are the people who used to be employed
writing trusted computer systems for the DoD.  Now that DoD funding is
going away they are looking for jobs too, and guess what they claim to
be?  That's right, computer security experts!

So what does it take to be competitive in this field?  It takes at
least a bachelor's degree in Computer Science and a strong background
generally in security.  This means understanding Risk Analysis,
Investigative Techniques, and Sensitivity Analysis.  It is not
something you can learn in a year.

If you want to know what language is best to know I can help there
too.  Definitely not BASIC.  You should know at least one high level
language, like Pascal, or C.  Then pick a machine platform, or two and
learn Assembly language on each one, well enough to do some low level
programming.  This is important because most of your virus work will
concern disassembly of virus code.  But don't stop there.  You will
need to know data structures, Operating Systems, Computer
Architecture, and database concepts.  After all that you will need
some experience so that you can see first hand that most problems are
due to poor code instead of malicious code.

Of course, I'm not sure if virus busting is a decent living, or not.
It has been a cottage industry since the first viruses started
appearing 4 years ago (please no more arguing about dates).  In fact I
know of very few organizations that have full time virus response
teams.  I guess John McAfee is making a decent living off of this
stuff, but he has been doing it since 1988 (how many of you remember
getting "certified" on the old Interpath BBS?).  But with all of the
problems he's had with the industry I certainly wouldn't trade places
with him.

Most companies today don't have the discretionary funding to start up
a Virus Research effort.  I have to read Virus-L at home because I
have a "real" computer security job to go to every morning.  I am not
alone in this respect.  Most companies don't realize the amount of
"phantom dollars" they are spending on viruses today.  When they do,
we'll see a much more effective response to this problem.

Now it's time to try out my new disclaimer:

NOTICE:  The ideas and opinions expressed herein are the property of
the author and are provided for the public good.  Any attempt to
excerpt, or compile the information in this message for tangible
personal gain requires the prior informed consent of the author.

Thanks,

Jim Molini

------------------------------

Date:    Thu, 20 Dec 90 10:18:00 -0800
From:    Michael_Kessler.Hum@mailgate.sfsu.edu
Subject: Virus protection (PC)

I can't say that we have tested all the products on the market, nor
done a side-by-side test of better known products, although we are
intending to set up a test site in January (during the break when some
time will be available for all concerned).  Nonetheless, here is a
preliminary report, which represents my impressions and should not be
construed as an official position in any way, shape or form.

One lab was constantly plagued with Yankee Doodle even though they used
Scan and Vshield.  The problem was that the start volumes (3Com LAN)
could not have Vshield installed on them.  Once F-Prot's F-DRIVER.SYS
was installed (it can be installed on start volumes), the problem
disappeared.  The lab has been virus free for two weeks, whereas before
there were daily occurences of infections.  Another lab reported that F-
Prot identified an infection of the Stoned virus while Scan did not (I
suspect that the person using it may have forgotten the /M in the
command line).  There was also a complaint that VShield slows down the
boot up process considerably, while F-DRIVER.SYS is hardly noticeable.

For institutions, the McAfee product is expensive.  For educational
institutions F-Prot costs $1 per station.  From our last discussion on
the matter, it appears that F-Prot will be our first line of defense,
(we are considering a site license rather than having each lab invest in
the product) with a suggestion that various individual labs may want to
invest in other products such as Scan or VI-Spy (the ethics of a single
copy user for multiple stations has not really been addressed).  The one
negative comment about F-Prot is that the updates appear to be less
frequent than one might wish.

One final comment about individuals checking their disks.  I installed a
Virus Check menu item on hard disks (visible on the first screen that
comes up) and on the network menus for those machines without hard
disks.  Nonetheless, the hard disks periodically get "stoned", in part
because students use their own programs and therefore tend to boot up
from their disks, but also because they neither believe that they are
the ones carrying the infection, nor wish to spend the time to check
their disks.  They will do so only if they are warned that a program is
infected.

May this prove useful to others.

MKessler@HUM.SFSU.EDU

------------------------------

Date:    20 Dec 90 06:02:00 +0000
From:    rebill02%ULKYVX.BITNET@jade.Berkeley.EDU (Russell E. Billings)
Subject: Re: Musicbug virus (PC)

CCMH@MVS.MCGILL.CA (Michael Head) writes:
>Using SCAN 6.1B71 on randomly selected,file-protected,
>previously unopened sets of COMBASE or SVGA UTILITY
>disks 1 and 2 I get :
>"Found Music Boot Virus [Muboot] in Boot Sector"

The system I bought and mentioned a short time ago on VIRUS-L came
with a slightly different set of disks.  The description of the
COMBASE disk that is infected exactly matches what I received with my
system, but my VGA utilities came on a single HD disk.

The VGA disk is labeled "PBVGA-MULTI Utility Disk 16 bit VGA"
underneath the Packard Bell logo.  I have run Scan 6.1b71 against both
the PBVGA and the COMBASE disks that I have and found no infection.

Idle Speculation : There are at least two different series of the
Packmate 386sx machines - the major difference being in the size of
the hard drive installed.  Could the 40 Mbyte systems have the problem
while the 86 Mbyte systems do not?  Was I just lucky?

Russell E. Billings
- --
  BITNET:   rebill02@ulkyvx.bitnet   UUCP: ...psuvax1!ulkyvx.bitnet!rebill02

------------------------------

Date:    20 Dec 90 10:32:19 +0000
From:    frisk@rhi.hi.is (Fridrik Skulason)
Subject: Re: *NIX virus... necessary knowledge. (UNIX)

dhesi%cirrusl@oliveb.ATC.olivetti.com (Rahul Dhesi) writes:
>There are many different types of machines running different types of
>UNIX.  For this reason it is very unlikely that a UNIX virus could
>ever become as widespread as an IBM/MS-DOS virus, for example.

Ah - no problem - just make the virus contain the C source to itself,
and insert it into the C programs it finds..... :-)

Merry Christmas, everyone....

- -frisk

- --
Fridrik Skulason      University of Iceland  |
Technical Editor of the Virus Bulletin (UK)  |  Reserved for future expansion
E-Mail: frisk@rhi.hi.is    Fax: 354-1-28801  |

------------------------------

Date:    20 Dec 90 10:37:22 +0000
From:    frisk@rhi.hi.is (Fridrik Skulason)
Subject: File/Boot viruses

CCTR132@csc.canterbury.ac.nz (Nick FitzGerald) writes:
>You cannot get a boot-sector infector virus fron running an executable
>(possibility of trojan "implanting" prog excepted - none known of).

Sorry - this is no longer true - we have now several viruses, which may
spread either as a file-infector or as a boot sector-infector.

On of the Bulgarian virus writers has even probised one (Real Soon Now),
which will in addition also be able to infect .SYS device drivers.

- -frisk

- --
Fridrik Skulason      University of Iceland  |
Technical Editor of the Virus Bulletin (UK)  |  Reserved for future expansion
E-Mail: frisk@rhi.hi.is    Fax: 354-1-28801  |

------------------------------

Date:    Thu, 20 Dec 90 11:37:34 +0100
From:    swimmer@rzsun8.informatik.uni-hamburg.de (Morton Swimmer)
Subject: Possibly a new virus (PC)

I just talked to a fellow in Hamburg who thought he had a virus.  It
replicates, is 940 bytes long, infects EXE files but sounds otherwise
like the Vienna virus. It doesn't seem to be resident (at least he
didn't know) and infects everything in the current directory. No anti
virus seems to find it (Scan, H&B).

Anyone heard of such a critter?

As soon as he's sent it to me I'll know more.

Cheers and Season's greetings, Morton

------------------------------

Date:    Thu, 20 Dec 90 12:48:38 +0000
From:    Klaus Hartnegg <hartnegg@SUN1.RUF.UNI-FREIBURG.DE>
Subject: Re: Viruses surviving warm boots. (PC)

franks@cicux.neth.hp.com (Frank Slootweg CRC) writes:

>  I think reports of viri which survive warm reboots are caused by
>misunderstanding the viri and/or the viri scanners.
...
>  Perhaps virus scanners should include an option or a seperate
>program which can be used to clear all of memory after a virus has
>been found in memory, so this class of false alarms can be eliminated.

I am not sure whether these are really false alarms in all cases.
Viri CAN survive warm boot because not all verctors are reset in a
warm boot! I know for example a CGA emulator for hercules cards that
does survive warm boot. It CAN be done!  I do however not know whether
there are already viri that really do it.
- --
- ---------------------------------------------------------------
Klaus Hartnegg, Kleist-Str. 7, D-7835 Teningen, Tel 07641/48652
BITNET   : HAKL@DFRRUF1
Internet : HAKL@ibm.ruf.uni-freiburg.de

------------------------------

Date:    Thu, 20 Dec 90 12:09:19 +0000
From:    jkp@cs.HUT.FI (Jyrki Kuoppala)
Subject: Re: *NIX virus... necessary knowledge. (UNIX)

dhesi%cirrusl (Rahul Dhesi) writes:
>Even if there were a substantial number of such executable files, there
>is another consideration:
>
>There are many different types of machines running different types of
>UNIX.  For this reason it is very unlikely that a UNIX virus could
>ever become as widespread as an IBM/MS-DOS virus, for example.  As
>soon as it arrived at a machine with a different CPU (or even the same
>CPU with a different executable file format) its propagation at that
>point would be blocked.

This is of course not true; who said viruses have to propagate as
binary files ?  Shell scripts, awk scripts, elisp code etc. are easy
to use.  SunOS LD_LIBRARY_PATH would be a wonderful place to put some
suitable code in (compiled into suitable object files from source
first).  Also, just leaving command files named 'ls' and the like in
writable diroctories catches all those nice people with .  first in
their PATH (like SunOS root account last I looked).

And here's a story Peter da Silva posts from time to time (I
hope he doesn't mind me posting it):

//Jyrki

From: peter@ficc.uu.net (Peter da Silva)
Newsgroups: comp.unix.wizards
Subject: UNIX and viruses (Re: GNU, security, and RMS)
Date: 8 Jun 89 14:08:27 GMT

In article <19930@adm.BRL.MIL>, bzs@bu-cs.bu.edu (Barry Shein) writes:
> Will someone explain to me exactly how usernames and passwords and
> file protections (a not unknown form of security) will protect against
> computer viruses??

Thirty-fifteen.

I guess it's time for this again. I originally posted this before the
Internet Worm Scare.


			The Usenet virus: a case history.
				A cautionary tale.

		The Usenet virus was detected when a user discovered that
	a  program  he  had  received  from  the  net  seemed to have two
	versions of malloc included  with  the  source.  One  version  of
	malloc  might  be odd, but people have never tired of reinventing
	the wheel. Two versions were suspicious, particularly since  they
	lead to a name conflict when the program was linked.

		The first, lmalloc.c,  seemed  to  be  identical  to  the
	malloc  listed  in  Kernighan and Ritchie. The second, bmalloc.c,
	was rather strange, so we concentrated our efforts on it...  this
	time was later found to have been wasted.

		After a little work during spare moments over the  course
	of  a  week  we  decided  it was actually a clumsy version of the
	buddy system (a  fast  but  space-inefficient  method  of  memory
	allocation).  It  might  make  a good example of how not to write
	readable code in some textbook, but it  wasn't  anything  to  get
	worried about.

		Back to the  first.  It  made  use  of  a  routine  named
	speedhack()  that  was  called  before  sbrk() the first time the
	malloc() was called. There was a file speedhack.c, but it  didn't
	contain  any  code at all, just a comment saying that it would be
	implemented in a future  version.  After  some  further  digging,
	speedhack  was found at the end of main.c. The name was disguised
	by some clever #defines, so  it  never  showed  up  in  tags  and
	couldn't be found just by grepping the source.

		This program turned out to be a slow virus. When  it  was
	run,  it  looked  for  a  file 'lmalloc.c'. If it found it, or it
	didn't find Makefile,  it  returned.  From  then  on  malloc  ran
	normally.

		If it didn't find it, it reconstructed it using a  series
	of  other  routines  with innocuous names tagged on to the end of
	other files. This was  apparently  an  attempt  to  avoid  overly
	increasing the size of any one of the files in the directory.

		Then it went into Makefile or  makefile  (it  looked  for
	both) and  added lmalloc.o onto the end of the first list of '.o'
	files it found. It then reconstructed each of the extra routines,
	and speedhack itself, using techniques familiar to any reader  of
	the  obfuscated 'C' contest. These were tagged onto the  ends  of
	the  '.c'  files that corresponded to the '.o' files in this same
	list.  The program was now primed to reconstruct the virus.

		On inspection,  we  discovered  that  about  40%  of  the
	sources   on  our system were infected by the speedhack virus, We
	also found it in one set of shell  archives  that  we'd  received
	but never unpacked or used, which we took as evidence that it had
	spread to a number of other systems.

		We have no idea how our system was infected.   Given  the
	frequency  with  which  we  make  modifications and updates, it's
	likely that the original speedhacked code is  no  longer  on  the
	system.   We  urge you to inspect your programs for this virus in
	an attempt to track it to its source.  It   almost   slipped   by
	us...  if  the  author  had  actually  put  a  dummy speedhack in
	speedhack.c we would have  merely  taken  lmalloc.o  out  of  the
	Makefile  and  defused *this* copy of the virus without being any
	the wiser.

		There are other failings in this  program  that  we  have
	thought  of. We have decided not to describe them to avoid giving
	the author of this program ideas we might regret.  Some ways that
	programs like this can be defeated include 'crc' checks of source
	files  and,  of  course,  careful examination of sources received
	from insecure sites.

 -----

Now I have to make a confession. This whole document is a hoax
intended to dramatize the problems involved with viruses and Usenet. I
suspect that most of you were clued to this by the Keywords line.
While playing with the idea and writing this article several things
occurred to me:

First of all, this virus is a much more complex program than any of
the viruses that have been spotted on personal computers. I think it
has to be, based on the design goals that a *real* UNIX virus must
satisfy.

	It must be small, to avoid detection. It must not cause files
to grow without bound.

	It must infect foreign files, otherwise it's not a virus... just a
Trojan Horse (like the bogus ARC and FLAG programs on the PC). Trojan horses
are a dime-a-dozen.

	It must infect source files, since this is the primary software
distribution channel for UNIX. A virus stuck on one machine is a boring
one.

	It must not break the infected program (other than what it might
care to do deliberately).

	It must not be obvious from a simple examination of the source (like,
changing main to Main and having a virus-main call Main).

I believe that given these goals (which are, of course, subject to
debate) a simpler program would be successful in infesting more than a
small fraction of the machines that (say) comp.sources.misc reaches.

There are systems immune to this particular attack, of course. Ones not
running UNIX, so sbrk() doesn't work. Or ones with radically different
versions of malloc(). Ones with no 'c' compiler. They are in the minority,
though.

On the other hand a virus of this type could infest a large proportion
of the net before it was found. The virus I described does not cause any
direct damage, except for using up a relatively small amount of disk
space. A more vicious virus is possible.

Other variations of this virus are obviously possible. For example, it
could be tagged onto any standard 'C' library routine... I chose
malloc merely because source was available and because it's something
that people complain about, so they wouldn't be likely to find an
extra copy suspicious.  Another good routine would be perror(), for
the same reason. This would have the additional benefit of making the
spread of the infection dependent on an additional random factor,
making it harder to detect the virus.

Do I think something like this is likely? Well, I'm sure that
eventually someone will try something like this, I suspect that their
virus would get caught much sooner than in this story, because I think
that more people look at the source than conventional wisdom would
lead you to believe.
- --
Peter da Silva, Xenix Support, Ferranti International Controls Corporation.

Business: uunet.uu.net!ficc!peter, peter@ficc.uu.net, +1 713 274 5180.
Personal: ...!texbell!sugar!peter, peter@sugar.hackercorp.com.
- --
Jyrki Kuoppala    Helsinki University of Technology, Finland.
Internet :        jkp@cs.hut.fi           [130.233.251.253]
X400 :            /C=fi/A=fumail/P=inet/O=hut/OU=cs/S=Kuoppala/G=Jyrki
BITNET :          jkp@fingate.bitnet      Gravity is a myth, the Earth sucks!

------------------------------

End of VIRUS-L Digest [Volume 3 Issue 205]
******************************************
