VIRUS-L Digest   Friday,  7 Feb 1992    Volume 5 : Issue 26

Today's Topics:

Yankee Doodle ... What does it do? (PC)
Michaelangelo ID sigs comp/w Stoned (PC)
Variant Virus (PC)
Unknown virus ?? (PC)
Re: FixMBR and very large disks - potential problem (PC)
Which anti-virus should I get? (PC)
Ohio on 3.5??? (PC)
Re: Help: 1193 virus? (PC)
Bezrukov's virus naming scheme (PC)

VIRUS-L is a moderated, digested mail forum for discussing computer
virus issues; comp.virus is a non-digested Usenet counterpart.
Discussions are not limited to any one hardware/software platform -
diversity is welcomed.  Contributions should be relevant, concise,
polite, etc.  (The complete set of posting guidelines is available by
FTP on cert.sei.cmu.edu or upon request.)  Please sign submissions
with your real name.  Send contributions to VIRUS-L@IBM1.CC.LEHIGH.EDU
(that's equivalent to VIRUS-L at LEHIIBM1 for you BITNET folks).
Information on accessing anti-virus, documentation, and back-issue
archives is distributed periodically on the list.  Administrative mail
(comments, suggestions, and so forth) should be sent to me at:
krvw@CERT.SEI.CMU.EDU.

   Ken van Wyk

----------------------------------------------------------------------

Date:    Thu, 06 Feb 92 14:58:31 +0000
From:    rodahl@watsci.uwaterloo.ca (Ken Ritchie)
Subject: Yankee Doodle ... What does it do? (PC)

Hi,

I was just wondering if anyone knows what the Yankee Doodle virus does
to the computer it infects. We had it on a pc in our lab once, and
ever since we have wondered what it does. Also, is there any info as
to known viruses and what they do?

					Thanks
					Ken Ritchie
					rodahl@watsci.uwaterloo.ca

------------------------------

Date:    Thu, 06 Feb 92 12:34:53 -0500
From:    William <PIPHER@vm.utcs.utoronto.ca>
Subject: Michaelangelo ID sigs comp/w Stoned (PC)

My apologies if this has been discussed before -- I have only just
subscribed to this newsgroup.

I've read a report that a so-called "Michaelangelo" virus is making
the rounds of academia, and that it's method of propogation is very
similar to our old friend "STONED".

I have a lot of experience with STONED, as it is a regular visitor to
my PC's.  In asmuch as it is extremely virulent and at the same time
extremely stupid, I have pretty much eliminated it as a threat on my
systems simply by placing a call to a little program I wrote in every
autoexec.bat and automenu type bat on all PC's.

The little program, which I call "stone.com" reads in sector 1 track 0
and scans it for a unique string which identifies the presence of the
"STONED" virus, and if found, the program displays a warning message
and terminates with an errorlevel code.  In the case of the stoned
virus, a 100% reliable search string is simply the word "stone" (read
case insensitive).

My question to the net is -- what is an analogous ID string for the
Michaelangelo virus that I could look for at the same time as I look
for "stone"?

Normally I don't worry extremely too much about virus's, but the boot
sector kind are such pests, and if Mikey is as stupid as stoned, I'd
just as soon guard against him using the same tools as are currently
in place.  Clearly, such methods are not a substitute for McAffee's
routines, but inasmuch as ALL of my 30 odd infections in the past year
have been "stoned" virus, my little program is very effective in my
environment.  I'd like to extend it to Mike's as well.

Thanks for your comments, sorry if my request is redundant.

*WmP*

*-----------------------------*
|    William M. Pipher        |
|    pipher@utorvm.bitnet     |
|    University of Toronto    |
|    Library Systems          |
*-----------------------------*

------------------------------

Date:    Thu, 06 Feb 92 12:19:57 -0500
From:    JOHNSON@tarleton.edu
Subject: Variant Virus (PC)

We have been infected with the variant virus here on the Tarleton State
University campus.  Can anyone educate me on this virus?  We are detecting
more and more virus infections since obtaining Untouchable Software.  Others
have included Stoned, Michelangelo, Brain and now Variant.  We are constantly
having to guard against these infections in our labs.  Thanks in advance.

Danny Johnson, Computer Systems Manager, TSU, Stephenville, Texas.

------------------------------

Date:    Thu, 06 Feb 92 14:29:29 -0400
From:    Martin Sebek <ASPIR@CSPGAS11.BITNET>
Subject: Unknown virus ?? (PC)

Dear Networkers,

I use the IBM PC-AT compatible computers, but I have a problems from
last week.

I make the documents in WORD for Windows. The computer does
undefined actions.
1) Changes the strings in the document, sometime
2) Replaces the part of document by asterisk

If I use dBase IV, computer deletes any records.

Now I have problems with boot, too. Computer prompts BOOT SECTOR
NOT FOUND sometimes.

I checked my computer for virus using by SCAN v.85, but did not
found any virus.

Could you help me, please?

I thing, it may be mutation of any known virus ( Michaelangelo for
example? ).

Replay directly to ASPIR@CSPGAS11.BITNET, please.

Than you very much.

         Martin SEBEK,
         Ph.D. student
         Prague, Czechoslovakia
         ASPIR@CSPGAS11.BITNET

------------------------------

Date:    Thu, 06 Feb 92 19:16:52 +0000
From:    mikep%triton.unm.edu@lynx.unm.edu (Mike Prine CIRT)
Subject: Re: FixMBR and very large disks - potential problem (PC)

Using DOS 5.0 seems to be a problem if the DOS on the Hard Disk
is a lower version or from a different vendor.
Has anybody overcome this problem?

- --
Michael Lee Prine	 IRC (Information Resource Center) consultant
Internet: mikep@hydra.unm.edu, Bitnet: MIKEP@UNMB, Phone: 1-505-277-8148
- --
Never use a hammer if a handgrenade is handy!

------------------------------

Date:    Wed, 05 Feb 92 16:26:53 -0700
From:    <ZEM0@ARGCNEA2.BITNET>
Subject: Which anti-virus should I get? (PC)

i would like to know which antivirus is the best to detect and clean
virus. i have an AT 286 with MSDOS
i have SCAN 84 and detect the virus 1701 1704 and the ohio
I could clean thoes virus (i suppose),i would to know if someone
know about those virus and if clean 84  can clean it.
i have the tntvirus (not original) and when i inmunize all the diskket
the virus ohio appear in the memory that the tnt not detect,
 i detected  by mean of scan84

                                    thank

------------------------------

Date:    Thu, 06 Feb 92 19:25:44 +0000
From:    kpjone01@ulkyvx03.louisville.edu
Subject: Ohio on 3.5??? (PC)

Greets,

I just found a 3.5 Double Density disk with the Ohio virus.  From what
I understand, the Ohio does not infect any disk except for 5.25's.  I
am using an IBM 55sx with Scan version 86b.  Unfortunatly I did not
get a copy of the virus as I was under pressure to get rid of it for a
professor.  Have there been any reports of Ohio infecting non 5.25 in
disks???  I have more info on the damage caused if anyone wants more
info.

Kevin

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~
Kevin Jones                                   KPJONE01@ULKYVX.CT.LOUISVILLE.EDU
Lab Supervisor                                KPJONE01@ULKYVX.LOUISVILLE.EDU
Computing and Telecommunications              PHONE:  502-588-6303
University of Louisville, KY                  FAX:    502-588-0150

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~

------------------------------

Date:    Thu, 06 Feb 92 20:56:19 +0000
From:    Fridrik Skulason <frisk@complex.is>
Subject: Re: Help: 1193 virus? (PC)

In Message 29 Jan 92 19:31:54 GMT,
  mark@walt.CS.MsState.Edu (Mark Rauschkolb) writes:

>I was just asked if I knew anything about the 1193 virus.  I can't
>find a reference to it anywhere.  Any clues?

I don't recognize any virus with that name, but there is one which is
1193 bytes long - namely the "Copyright" virus....

I haven't analysed it in detail, so I don't have any useful information on
it.

- -frisk

------------------------------

Date:    24 Jan 92 21:43:08 +0000
From:    bontchev@fbihh.informatik.uni-hamburg.de (Vesselin Bontchev)
Subject: Bezrukov's virus naming scheme (PC)

[Moderator's note: Normally, I would have distributed a message of
this size via the archives.  But, I decided to experiment a bit with
this one - at the end of a digest.  If any of you have strong feelings
one way or the other with regards to whether this sort/size posting
should go to the archives or to the group, I would appreciate hearing
them.]

Hello, everybody!

In this article I'm going to describe the method for computer virus
notation, invented by the anti-virus researcher Nikolay Nikolaevitch
Bezrukov, from Kiev, Ukraine.

His computer virus notation belongs to the type of so-called behaviouristic
notations - each virus is assigned a special code, which describes its
behaviour. Similar viruses have similar descriptions. The descriptions are
not unique, therefore two very similar and closely related virus variants
may have the same descriptions.

Currently several anti-virus researchers use such behaviouristic virus
descriptions. Among them are Jim Bates, Patricia Hoffman, the Japanese
anti-virus group, and others.

I personally dislike this kind of methods, since it has several drawbacks:

1) The descriptions are not strictly unique and therefore cannot be used
for exact virus identification.

2) They are not easily human-readable and therefore cannot be used for easy
reference. However, I must admit that they are very compact and useful to
implement in machine-readable form, so that a natural language description
of the virus could be easily generated from them. This can be used in the
"help about this virus" options in the anti-virus programs, in order to
save space.

3) The descriptions include only a limited number of virus properties.
Therefore, then a new idea in the virus writing appears, and a virus with a
completely new property is created (e.g., the Dir II virus), the
description method must be changed accordingly.

However, of all the virus descriptions of this type that I have seen,
Bezrukov's notation is the best one. But let's explain his method. He uses
two slightly different notations for boot and for file infectors.

File infectors.

Each virus, which infects files, is described by its name (classification
code), and five descriptors.

The name consists of one to three letters, a dash, and a number. The
letters are 'R' (if the virus is memory resident), 'C' (if the virus can
infect COM files), and 'E' (if the virus can infect EXE files). If the
appropriate property of the virus does not exist, the letter is not used.
The number is the pure infective length of the virus, that is, without any
file padding it might use. For instance, the classification code of the
Vienna virus (the most common variant) is C-648, and the lassification code
for the standard Dark Avenger virus is RCE-1800. If the virus has several
closely related variants with one and the same infective length, an
additional lower case caracter can be appended to the virus name, like
RC-1704f for Cascade.1704.Format.

The five additional descriptors are the main desctiptor, the infection
predicate, the infection strategy, the memory descriptor (not used for
non-memory resident viruses), and the list of the interrupts hooked by the
virus.

Main descriptor.

The main descriptor consists of ten fields, each of which is optional and
is marked by an upper case character. The values of the fields are
denotated by lower case character, which are concatenated to the field
name. The fileds are delimited one from another by a space. If a virus has
different values in one and the same field for COM and EXE files, the two
values are listed in COM first, EXE next order, and are separated by a
dash. Here are the ten fields and their possible values.

Field A (destructive properties of the virus). Possible values:

        a - alters some important system information - in the master boot
sector, the boot sector, the FAT, the directories, including creation of a
directory instead of a file (like the LoveChild virus) or vice versa;

        b - does not permit the execution of the infected program or of a
DOS command;

        c - corrupts or modifies files;

        d - deletes files;

        e - damages EXE files with an internal overlay structure (like the
Jerusalem virus);

        f - formats the disk;

        i - ignores the write requests or substitutes them with read or
verify requests;

        h - hangs the system (intentionally or not);

        k - destroys only some particular files. This inludes viruses which
target specific anti-virus programs and viruses which infect (by mistake)
the two hidden DOS files, so that the system becomes unbootable;

        l - low level formats the hard disk;

        m - corrupts the FAT in such a way that some files get
cross-linked;

        p - corrupts or modifies the information, transfered through the
paralel port;

        r - causes reboots;

        s - overwrites random sectors of the disk;

        t - trojanizes other programs (like LoveChild and Phoenix);

        v - modifies the information, displayed on the screen;

        w - writes to the ports;

        x - creates bad or lost clusters;

        z - zeroes (wipes out) some system information (boot sectors, root
directory, FAT, etc.).

Field B (observable virus behaviour). Possible values:

        a - the message "Abort, Retry, Ignore" appears when the virus tries
to infect a write-protected diskette;

        b - when the virus infects or destroys one of the programs started
from AUTOEXEC.BAT, the system constantly reboots. A typical example is the
Vienna virus;

        e - error messages appear, like "Divide overflow", "Parity error",
"Stack overflow", etc.;

        m - musical or any other sound effects;

        n - the virus creates new files on the disk;

        r - the virus removes one or more file attributes and does not set
them back to their previous values. The particular attribute can be shown
in parenthesis, e.g. r(r) or r(h); r(z) means that the attribute byte is
zeroed;

        o - programs, with overlay structure (external or internal) do not
work when infected by the virus;

        s - the virus causes slowdown of the machine.

        t - the virus displays text messages;

        v - video effects;

Field C (how the virus infects the command interpretter). Possible values:

        n - does not infect files with name COMMAND.COM;

        o - does not increase the length of the command interpretter when
infects it (e.g., the virus installs itsef in the area of zeroes at the end
of the file);

        s - infects the command interpretter regardless of its name (e.g.,
fetches the actual name through the COMSPEC variable);

        t - destroys the transient part of the command interpretter in
memory, causing its reloading and infection. Thus, the command interpretter
is the first program that gets infected when the virus loads itself in
memory;

        u - infects the command interpretter as any other file.

Field D (changing of the date and time of the infected files). Possible
values:

        i - changes the date to the date of the infection;

        m - modifies only the month field in the date;

        n - does not change the date and time stamp of the infected files;

        r - changes the date and time stamp to random values;

        s - changes only the seconds field in the time field. An optional
number may follow, if the seconds get changed to a constant value;

        t - changes only the time field;

        x - sets the time and date field(s) to a value, computed by an
expression, involving the previous values of the field(s);

        y - changes only the year field.

Field E (how the virus determines whether the file being infected is of EXE
or of a COM type). Possible values:

        n - the file extension is used;

        h - the magic number of the file header is used (MZ);

        z - as above, but the value ZM is also checked.

Field I (how the virus infects files). Possible values:

        o - overwriting virus;

        f - the virus overwrites the begining of the file with its body and
appends the overwritten part to the file;

        h - the virus "shifts" the whole file and inserts its body in the
beginning of the file (as the Jerusalem virus infects COM files);

        m - the virus inserts its body in the middle of the file;

        t - the virus appends its body to the file;

        b - part of the virus is inserted at the beginning of the file and
part of it is appended at the end of the file;

        c - companion virus - a COM file is created where a file with the
same name and with an EXE extension exists;

        x - non-standard way of infection (none of the above);

A second lowercase letter might follow, with the following maning:

        c - the files grow with a constant amount of bytes;

        p - the files are padded to a multiple of a certain value. The
value 16 is assumed by default, if it is different, it is appended to the
letter 'p';

        v - the files incerase with a random (in some limits) amount of
bytes;

        n - the infected files do not grow;

        x - non-standard way (non of the above).

Field F (how the virus gets control when the infected file gets executed).
Possible values:

        b - the virus is executed, because its body is in the beginning of
the file;

        j - the first three bytes of the file are replaced with a JMP
instruction to the virus body;

        i - any existing JMP instructions in the beginning of the original
file are traced and the virus inserts a JMP to its body where these
original JMPs point to;

        m - if the original file begins with a JMP instruction, its operand
gets modified to point to the virus body;

        n - replaces the first few bytes of the file with a small program,
which transferes control to the virus body;

        h - the CS:IP fields in the EXE header are modified to transfer
control to the virus body;

        r - the relocation items in the EXE header are modified;

        c - if the file is of EXE type, it is converted to COM format.

Field K (how many times the virus can infect a file). Possible values:

        m - files can be infected multiple times, until it is impossible to
load them in memory;

        s - files are infected only once;

        number - files a infected up to <number> times.

Field L (infective length). Possible values:

        i - same as in the virus name;

        number - use that number instead;

        list - one of the values listed.

Field M (stealth techniques used). Possible values:

        a - the virus uses automodification. Also known as mutating or
polymorphic viruses;

        c - the virus uses encryption of its whole body, with exception of
a small degarbling routine;

        d - the virus uses anti-debugging techniques;

        e - the virus does not modify the entry points of the infected
files;

        f - the virus removes itself from the infected program, when the
latter is loaded for examination;

        h - the virus can circumvent monitoring programs like FluShot+;

        i - the virus does not increase the sizes of the infected files;

        l - the virus conceals the fact that the infected files have
increased sizes by interceprint the FindFirst/FindNext finctions;

        m - the virus encodes the text strings contained in it;

        o - the virus body consists of several segments;

        p - multi-partite virus - infects both files and boot sectors;

        r - the virus conceals its presence in the infected files, by
intercepting and modifying the read requests;

        s - the virus conceals the fact that the total amount of free disk
space has decreased due to the infection of some files;

        t - the virus cannot be "seen" in memory with programs like MAPMEM.

Field T (files, which can be infected in addition to COM and EXE). Possible
values:

        a - the virus "infects" files with any extension;

        b - the virus infects files with BIN extension;

        o - the virus infects overlays;

        s - the virus infects device drivers.

Infection predicate.

The infection predicate consists of an arithmetic-boolean expression, which
indicates when the virus considers that the files are suitable for
infection. The following standard variables can be used in the expression:

        name - the name of the file;

        attr - the attributes of the file. One-letter character can be used
to indicate the possible values, e.g. attr=R;

        LenC - the length of the COM file;

        LenE - the length of the EXE file;

        LenCE - the length of the file, regardless of its type;

        MaxC - the maximal length for COM files, in order to be loadable
even if infected. MaxC = 64 K - virus_length - 256;

        FDate - the file modification date;

        FTime - the file modification time;

        Date - the current date;

        Time - the current time;

        Start - the first byte of the file (e.g. Start=JMP means the files
is infected only if it begins with a JMP instruction).

Infection strategy. Describes how the virus selects files for infection.
Possible values are:

        all - infects all files;

        cur-dir - infects files only in the current directory. Can be
combined with the above value - for instance all(cur-dir(*.com)) means that
when an infected file is executed, the virus in it tries to infect all COM
files in the current directory;

        find - infects files during the FindFirst/FindNext functions (11h,
12h, 4Eh, 4Fh);

        root-dir - infects files in the root directory;

        path - infects files, in the directories, listed in the PATH
variable;

        tree - traverses the whole directory tree to find a file, suitable
for infection;

        close - infects files when they are closed (functions 10h, 3Eh);

        create - infects files when they are created (functions 16h, 5Bh);

        exec - infects files when they are executed (function 4Bh);

        open - infects files when they are opened (functions 0Fh, 3Dh);

        rename - infects files when they are renamed (function 17h);

        read - infects files when they are read (functions 14h, 3Fh);

        chmod - infects files when their attributes are changed (function
43h);

        x - non-standard strategy (none of the above);

        l - LAN-oriented virus

Memory descriptor. Describes how the virus installs itself in memory.
Possible values are:

        a - the virus installs itself in a part of the available memory,
without marking it as used, like the Stupid (Do Nothing) virus;

        d - the virus inserts itself in an unused hole in the operating
system;

        i - the virus resides in the interrupt vector table;

        l - in the low memory, after the latest loaded TSR program;

        b - in the DOS buffers;

        h - in the highest memory block available to the operating system,
by decreasing its size;

        s - the virus is segmented in different places in memory;

        u - in the upper memory and decreasing the total amount of memory
available to the system, like most boot secto viruses do;

        x - in extended memory;

        p - in expanded memory;

        t - like a normal TSR program;

        v - in video memory;

        number - the amount of memory in bytes, occupied by the virus.

Interrupts hooked. Just a list of interrupts, hooked by the virus.

Besides the above, Bezrukov also lists up to seven virus signatures: SM
(the signatures, used by McAfee's SCAN), SI (the signature, used by IBM's
VIRSCAN), SB (Bezrucov's own signature), SC (the signature, used by
Carmel's TNTVIRUS), SV (the signature, published by Virus Bulletin), ST
(list of the plain text strings in the virus), and SJ (the first few bytes
after the virus entry point, if they are always one and the same). He also
list a short, three-character name, used to index the virus family, a list
of the available programs, which can disinfect the virus, the environment
needed by the virus to work (DOS version, CPU type, etc.), the aliases for
this virus, and so on, but this is not so important.

Here are two examples - the descriptions of the Vienna and the Dark Avenger
viruses:

C-648:
        DM: Arbt Bab Cy Ds En Itc Fj Ks Li
        DP: Time(s) != 62 && 10 < LenC && LenC < 64000
        DS: cur-dir(*.com), path(*.com)

RCE-1800:
        DM: As Cy Dn Eh Itc-tp Fj Ks-s Li Mht
        DP: 1774 < LenCE && LenC < 63149
        DS: exec, read
        DH: 13, 21, 27


Boot sector viruses.

The boot sector viruses are also denoted by a name (classification code)
and several descriptors, but the name is constructed in a slightly
different way.

The name consists of one of the letters 'M' (if the virus is a master boot
sector infector), 'B' (if the virus is a DOS boot sector infector), or D
(if the virus is a floppy-only boot sector infector). A "xn" is appended,
if the virus consists of two parts, where the second part is stored in n
clusters, marked as bad. All this is followed by a dash, and the second
byte of the infected boot sector (in hex).

For instance, the name of the Stoned virus is M-05, the name of Ping Pong
is Bx1-1C, the name of Brain is Dx3-E9 and so on.

There are only two descriptors - a main descriptor and a memory descriptor.
The memory descriptor is constructed in the similar way as with the file
viruses. The main descriptor is slightly different, and consists of the
following fields:

Field A (destructive properties of the virus). Possible values:

        c - corrupts or modifies data in some sectors or files;

        e - causes system errors, like "Divide overflow", etc.;

        f - formats the disk or part of it;

        i - changes the write requests into read or verify requests;

        h - hangs the machine;

        l - low-level formats the disk;

        p - corrupts the information, written to the paralel ports;

        r - causes a reboot at random times;

        s - overwrites random sectors of the disk;

        v - the virus corrupts the information, displayed on the screen;

        w - writes to the ports;

        x - creates bad or lost clusters;

        z - wipes out the information in files or in some system areas
(boot sectors, FAT, root directory, etc.).

Field B (observable behaviour). Possible values:

        a - the message "Abort, Retry, Ignore" is displayed when the virus
tries to infect a write protected diskette;

        m - the virus plays music or has some other sound effects;

        v - the virus has video effects;

        t - the virus displayes text messages.

Field L (the lengths of the parts of the virus in bytes, delimited by a
dash).

Field M (stealth techniques used). Possible values:

        r - redirection of the read/write requests so that the original
boot sector is accessed, instead of the infected one;

        c - the virus uses encryption;

        w - the virus blocks any write attempts to the sectors, occupied by
its body;

        n - no stealth techniques used.

Field N (number of the first non-matching byte, when an infected and a
clean boot sector are compared).

Field S (infection strategy). Possible values:

        r - the disk is infected on a read access to it;

        b - the disk is infected on warm reboot.

The place where the virus is placed on the disk is indicated in one of the
following ways:

        xN - on N clusters, marked as bad;

        tN - on an additional track number N;

        N.N.N - at absolute disk address Cylinder.Head.Sector.

As examples. let's consider the Stoned, Ping Pong and Brain viruses:

M-05:
        DM: L440 N1 S0.1.3-0.0.7 Mn
        DR: upper 2K
        SJ: EA0500

Bx1-1C:
        DM: L512+471 N2 Sx1 Mn
        DR: upper 2K
        Sj: EB1C90

Dx3-E9:
        DM: L512+1214 N1 Sx3 Mr
        DR: upper 7K
        SJ: FAE94A

References:
        Bezrukov N. N., "Kompiuternaya virusologiya", URE, 1991, ISBN
5-88500-031-X

Regards,
Vesselin
- --
Vesselin Vladimirov Bontchev        Virus Test Center, University of Hamburg
Bontchev@Informatik.Uni-Hamburg.De  Fachbereich Informatik - AGN, rm. 107 C
Tel.:+49-40-54715-224, Fax: -226    Vogt-Koelln-Strasse 30, D-2000, Hamburg 54

------------------------------

End of VIRUS-L Digest [Volume 5 Issue 26]
*****************************************
