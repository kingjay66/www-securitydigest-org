VIRUS-L Digest   Wednesday, 29 Apr 1992    Volume 5 : Issue 96

Today's Topics:

Many files overwritten with nulls. Virus? (PC)
URGENT Administrative crisis (PC)
Bug in TBSCAN/VSIG9203+ (PC)
Starship virus (PC)
Re: anti-virus BBSes (PC)
Re: Bloody Virus (PC)
Re: Combatting tunnelling viruses (was Re: Increasing CBCS Security (PC)
Re: Defence from mutating viruses. (PC)
Re: Misinfo detected, A/R/ or name a Bulgarian virus (PC)
Re: On searchiong the original INt 13h (PC)
Re: Polymorphic List (PC)
misconceptions about CRC in DDJ
Re: A kinder gentler Virus-L
Why a good virus is a bad idea?
Checklist part 11

VIRUS-L is a moderated, digested mail forum for discussing computer
virus issues; comp.virus is a non-digested Usenet counterpart.
Discussions are not limited to any one hardware/software platform -
diversity is welcomed.  Contributions should be relevant, concise,
polite, etc.  (The complete set of posting guidelines is available by
FTP on cert.sei.cmu.edu or upon request.)  Please sign submissions
with your real name.  Send contributions to VIRUS-L@IBM1.CC.LEHIGH.EDU
(that's equivalent to VIRUS-L at LEHIIBM1 for you BITNET folks).
Information on accessing anti-virus, documentation, and back-issue
archives is distributed periodically on the list.  Administrative mail
(comments, suggestions, and so forth) should be sent to me at:
krvw@CERT.SEI.CMU.EDU.

   Ken van Wyk

----------------------------------------------------------------------

Date:    Fri, 24 Apr 92 14:44:04 +0000
From:    robin@ibmpcug.co.uk (Robin Wickenden)
Subject: Many files overwritten with nulls. Virus? (PC)

We've just had a problem at our site office in Delhi, India.  There
are several machines there: a 486, 2 386's, a 386SX laptop, and an XT
for the secretary.  Files are passed between them all the time -
usually text or binary data (we have special compilers written in
house to produce binary for blowing into EPROMS) but sometimes
programs as well.  The other day roughly 600 files on the 486 got
overwritten with zeros. The sizes, dates and times all stayed the
same.  Some files were data (both source and object), one or two were
.EXE's.  From what we've seen so far, each file was overwritten
completely - never partially - and there's no obvious pattern as to
whereabouts on the hard disc the affected files were.  This suggests
to me that it isn't a hardware problem, and anyway the machine seems
to be working OK now.  Someone out there has run a fairly old copy of
Dr Solomon's FindVirus, which didn't find anything.  People round here
are hastily buying the latest version, and I've suggested they also
try McAfee's Scanv, and perhaps FPROT too.  But I wonder, is this a
virus at all?  Given all the to-and-fro with floppy discs, you'ld
think the other machines would have caught it by now if it was.  One
bloke out there does tend to try various bits of software from a
number of sources on the 486, and I strongly suspect he doesn't do any
checks on them first. I've seen him running a couple of things called
BANNER (which does sideways printing) and PRINTSHOP (which seems to
produce letterheads). Are there any known problems with these?
Someone tells me he's heard of software that, if it thinks you're
running an unlicenced copy, appears to work, but deliberately
scribbles on your hard disk.  Is this true?  Naturally, the fellow
concerned has been reminded of his obligations regarding other peoples
software, but is this the reason for the problem?

So, has anybody seen anything like this happen before, and if so, what
caused it? What other things should we check, and is there any other
info on this problem?

Please mail me; I'll post a summary in this group.
Thanks,
Robin.

------------------------------

Date:    24 Apr 92 12:38:57 -0500
From:    blythe@kuhub.cc.ukans.edu
Subject: URGENT Administrative crisis (PC)

This is an URGENT request for some assistance of any kind.

We have the following problem.
For some reason, several of the machines are consistently locking
up at random times.  We have kept a log of the date, times, and app.
that they were using at the time of the lockup, but not correlation
can be found.

We here at the University of Kansas have recently installed a
Novell v3.11 ethernet LAN for the Chancellors office using
Western Digital ethernet cards and Zenith 386/20 & 386/25
computers as workstations.  The server is a Zenith 386/33.
We are running on DOS 5.0 and IPX/SPX 3.01 and SHELL 3.21 Rev A.
We have checked the voltage levels in the building, which have
been recorded at a high of 121v and a low of 111v.
We are running virus protection on all of the workstations and on
the server, FPROT and NAV.

We are using WORDPERFECT OFFICE as our LAN menuing.  Several of the
lockups have occured when Pmail has interrupted to display a new
message has arrived.  Also there have been many lockups when the
machine has been either in an application or not, but SITTING IDLE.

Any help that you can provide will be greatly appreciated.

David C. Blythe
University of Kansas
Computing Center
Administrative User Services
Lawrence, Ks  66045  (913)864-0221

Internet: Blythe@Kuhub.cc.ukans.edu

------------------------------

Date:    25 Apr 92 14:47:00 -0700
From:    Robert Slade <rslade@cue.bc.ca>
Subject: Bug in TBSCAN/VSIG9203+ (PC)

Both HTSCAN and TBSCAN use the VSIGyymm.ZIP virus signature files.
Along with the VIRSCAN.DAT file and the *.AVR files, the zip
distribution contains COMPRSCA.DAT which lists signatures for
compressed executable files.  This file, if appended to the
VIRSCAN.DAT, allows compressed executables to be identified, since
they present another level of risk in terms of virus detection.

However, the VSIG9203 AND 9204 distributions have not worked properly
with TBSCAN (at least, not with TBSCAN30 and 33.)  Concatenating the
files with the DOS copy command, as suggested in the documentation,
results in a message about an error in line 1949 (for 9204) which is
in the COMPRSCA section, and seems to be a syntactically valid listing
for COMPACK compression.

In testing, I also found that, even with the offending lines removed, TBSCAN
does not give any warning of the compressed files.

For comparison purposes, HTSCAN, although somewhat slower, gives no error
messages for the concatenated file, and does correctly identify compressed
files.
===================
Vancouver                                   | "Power users think
Institute for      Robert_Slade@sfu.ca      |  'Your PC is now
Research into      rslade@cue.bc.ca         |  Stoned' is part of
User               CyberStore Dpac 85301030 |  the DOS copyright
Security           Canada V7K 2G6           |  line." R. Murnane

------------------------------

Date:    Sun, 26 Apr 92 16:27:54 +0000
From:    martin zejma <8326442@AWIWUW11.BITNET>
Subject: Starship virus (PC)

In the latest Virus-l issues a few articles concerning new anti-virus
tools and stealth viruses mentioned 'Starship' as an example ,
once for not replicating at all ( or very seldom ) and on the other side
as difficult to detect the occuring infection.

Recently I had a short correspondence with Joe Wells about the reason
why this virus is still not detected by any of the currently available
shareware scanners.  The point was that no one seemed to be able to
make it replicate, maybe especially in the U.S.. Vesselin mentioned
he's not dissected the virus, but he would do so ( if his time allows
it ).

About three weeks ago I tried to replicate 'Starship', and it instantly
infected the harddisk. Joe Wells tended to the explanation that it
may only replicate in the former eastern block countries, but
as I'm living in Western Europe, there must be another reason.

SO, DOES anybody have an explanation why this virus refuses to replicate
most of the time, or more specifically :

    Are there normally additional parameters existing in the BIOS segment
    at 0000:04b0 ??

    (to find out for your machine, start 'debug', type 'd 0000:4b0', and
    if there are non-zero bytes in the range of 4b0-4e0, there are
    parameters. btw enter 'q' to quit the debugger ;-))

The signatures I extracted for use with SCAN from McAfee (Option /EXT)
are :

 -----cut here-----------------------------------------

#  Starship Virus

" 32 FF *(4) B3 06 *(4) 2B C3 *(10) 36 AD *(4) 0E *(4) 1F *(17) 8B 37
 *(4) 48 *(4) 48 *(10) 8B 0F *(4) E3" Starship Virus [Starship]

" b9 37 00 be d6 06 bf c0 02 f3 a4 bf b0 04 " Starship Boot [Strshp-Boot]

" 80 fa 80 75 41 83 f9 01 75 3f 0a f6 75 38 " Starship Mem [Str-Memory]

 -----cut here-----------------------------------------

I agree that this virus seems to be almost a research virus, but
it could spread very slowly and unattentioned, cause it only infects
files created on floppy drives ( result eg. of a compiling run ), so
no checksum program should detect it, as the file is correctly
created as a result of a compilation.

The infections also mutate quite well, in actual terms a polymorph
virus, where the encryption key changes ( are there ANY encrypted
virus with a CONSTANT key ?? , I don't think so :) ), as the commands
and size of the encryption routine do, but the encryption algorithm
stays the same.  The commands of the routine are filled with random
junk instructions, and for few commands also alternative machine
commands are used, about 96 combinations (excluded all junk
instructions) are possible, hard times for a scanner !!

Its a multi-partite infector which infects the harddisk in an unique
way (from my point of view) , cause it only changes THREE (!) bytes
representing the start adress of the active boot partition (normally
1.0.1) to an adress near the (physical) end of the harddisk, the 6th
last available absolute sector.So no currently available scanner
should detect it, cause the MBR and the PBR remain uninfected, and the
location of the PBR isn't checked.

                                Regards , Martin

BTW Does anybody know compilers which CREATE files and write into them
    in one stroke ? I suggested MASM, but it creates a zero-length file
    closes it, opens it and writes into it. Maybe high program language
    compilers act in another way ?

+-----------------------------------------------------------------------+
| Martin Zejma                                8326442 @ AWIWUW11.BITNET |
|                                                                       |
| Wirtschaftsuniversitaet Wien  ---   Univ. of Economics Vienna/Austria |
+-----------------------------------------------------------------------+

------------------------------

Date:    27 Apr 92 09:36:00 +0000
From:    bontchev@fbihh.informatik.uni-hamburg.de (Vesselin Bontchev)
Subject: Re: anti-virus BBSes (PC)

JDG111@psuvm.psu.edu writes:

> Someone requested a list of sites which carry scan strings for
> different viruses...  I'd be interested in obtaining a list, also.
> ANyone have a current one?

There should be a file, called VSyymmdd.ZIP on most archive sites that
have anti-virus programs. The latest version that I have seen was
vs920105.zip. It is available on Simtel20, directory
pd1:<msdos.trojan-pro>.

> Tis a shame some people will only give
> such a list to McAfee...

Tis also completely useless, since McAfee uses only strings that he
has selected himself.

Regards,
Vesselin
- --
Vesselin Vladimirov Bontchev        Virus Test Center, University of Hamburg
Bontchev@Informatik.Uni-Hamburg.De  Fachbereich Informatik - AGN, rm. 107 C
Tel.:+49-40-54715-224, Fax: -226    Vogt-Koelln-Strasse 30, D-2000, Hamburg 54

------------------------------

Date:    27 Apr 92 09:42:56 +0000
From:    bontchev@fbihh.informatik.uni-hamburg.de (Vesselin Bontchev)
Subject: Re: Bloody Virus (PC)

las@cunyvms1.gc.cuny.edu writes:

>          infection. The virus was "Bloody Virus".  Now I'm afraid
>          of down loading files into my pc from the main computer.

The Bloody! virus (aka Beijing or June 4th) is a boot sector virus.
You cannot get it by downloading files - you must try to boot from an
infected diskette. In fact, you cannot catch -any- virus by
downloading files - you must execute them.

Regards,
Vesselin
- --
Vesselin Vladimirov Bontchev        Virus Test Center, University of Hamburg
Bontchev@Informatik.Uni-Hamburg.De  Fachbereich Informatik - AGN, rm. 107 C
Tel.:+49-40-54715-224, Fax: -226    Vogt-Koelln-Strasse 30, D-2000, Hamburg 54

------------------------------

Date:    27 Apr 92 09:57:27 +0000
From:    bontchev@fbihh.informatik.uni-hamburg.de (Vesselin Bontchev)
Subject: Re: Combatting tunnelling viruses (was Re: Increasing CBCS Security (P
	  C)

PHYS169@csc.canterbury.ac.nz (Mark Aitchison, U of Canty; Physics) writes:

> It is theoretically possible to use the power of the 386 (or better)
> to prevent tunnelling viruses (in fact just about any virus that
> doesn't get control of the computer before the anti-viral software).
> It doesn't have to mean using protected mode (but, from what I've
> seen, it is the most convenient, so long as it is built into the
> operating system), but it does involve some (okay, LOTS of) speed
> degradation.

If you really want to stop all possible tunneling viruses, you must
use protected mode. Even then, it will work only if there aren't any
bugs in the protection scheme implemented in the 386 chip.

> Instead of TSR's sitting on interrupts such as int 13, it is possible
> to check the program as it is loaded.  Okay, nothing new so far.  But
> what you can do is interpret (instead of execute) the first few
> instructions. Because of the way that viruses infect, it is much
> easier for them to execute at the start of the program than the end.
> During this stage, it is possible to watch for any illegal disk or
> memory accesses.  This could be done on any PC (8088 chip up), but the
> speed you get with a 386 is pretty important, as is the memory space
> for the emulation software.

It can be bypassed, see below. Also, if you stick to 386 only and
use protected mode, you won't have any speed degradation. You'll get
compatibility degradation, however.

> At this stage, you're probably saying that a virus could be specially
> built to waste lots of time at the start, until the TSR thinks the

Almost. Not lots of time - lots of INSTRUCTIONS.

> code being executed must surely be out of any viral area, and stops
> interpreting.  But, to do so the virus would have to slow down the
> execution of all programs, which should make them obvious to users. Or

First, the program load will be already slowed down by the system that
you are proposing, so the user will probably attribute the slowdown
caused by the virus to your system. Second, a virus could begin with a
lot of "do-nothing" instructions just to fool your system. A few
kilobytes of NOPs execute quite fast, you know... Of course, you could
try to detect this too, but then it is much more difficult than
detecting just memory instalation and DOS patching... You'll need some
kind of heurisic tool and you know my oppinion about the reliability
of the heuristic tools... :-)

Regards,
Vesselin
- --
Vesselin Vladimirov Bontchev        Virus Test Center, University of Hamburg
Bontchev@Informatik.Uni-Hamburg.De  Fachbereich Informatik - AGN, rm. 107 C
Tel.:+49-40-54715-224, Fax: -226    Vogt-Koelln-Strasse 30, D-2000, Hamburg 54

------------------------------

Date:    27 Apr 92 10:09:40 +0000
From:    bontchev@fbihh.informatik.uni-hamburg.de (Vesselin Bontchev)
Subject: Re: Defence from mutating viruses. (PC)

kiae!rtech!vl!ALS@vl.ts.kiev.ua writes:

>    By the way, my program makes ReadOnly bit stronger but not removes it.
> Virus programmer can remove this defence if and only if:

>            1. He has all DOS'es, for what this defence was made
>               (now - MS-DOS 4.0, 4.01 and 5.0, tomorrow MS-DOS 6.0 and
>                may be COMPAQ-DOS or DR-DOS)

>            2. He has all my programs for these DOS'es, because even in
>               DOS 4.01 and DOS 5.0 changes in MSDOS.SYS are differs greatly

Hm, let's not underestimate the virus writer... He could do a lot of
other nasty things... Why do you thing that there's only one way to
call DOS - by passing through the point where your program has patched
it? There are about half a dozen of ways to do it and I bet that at
least some of them will bypass your program... If you explain me
(privately) where your program patches DOS, I could tell you how it
can be bypassed...

>    NCACHE don't, but it uses other virus-like trick, so you can load it befor
e
> my programs. But many of Norton Utilities, such as NDD, UNERASE, CALIBRATE
> really do. And at least one editor ( BRIEF, if I am not mistaken ) accesses
> disk directly via Int 13.

Norton's famous utilities (version 5.0 and above) use another dirty
trick which I would attribute only to viruses - the INT 2Fh/AH=13h
function call...

>   They could restore modified parts of MSDOS.SYS and IO.SYS. Just now it's
> not very hard to do it. But if somebody can support this idea (or can support
> me :-) and can write
> such defence for other DOSes or regularly place it at other positions of
> MSDOS.SYS and IO.SYS then virus had to:

>          1. Define difference between PC-DOS, MS-DOS, DR-DOS, ..., of the
>             same version, because all of them answer: "I am DOS X.Y",
>             but their codes differs too much

>          2. Have in its (virus) codes original and not very short parts of
>             IO.SYS and MSDOS.SYS files for any of the above DOSes
>             (to replace by them modified parts of files)

>          3. Select concrete position and length of modified files

>          4. And be sure that with new DOS version all this big efforts
>             would be lost.

This is quite hard to do, indeed... But, if I were a virus writer, I
would use a more elegant solution... Like bypassing your patch at all
or like masquerading SetAttribute as GetAttribute - just like the
Phoenix viruses masquerade the disk writes as disk reads...

Regards,
Vesselin
- --
Vesselin Vladimirov Bontchev        Virus Test Center, University of Hamburg
Bontchev@Informatik.Uni-Hamburg.De  Fachbereich Informatik - AGN, rm. 107 C
Tel.:+49-40-54715-224, Fax: -226    Vogt-Koelln-Strasse 30, D-2000, Hamburg 54

------------------------------

Date:    27 Apr 92 10:46:49 +0000
From:    bontchev@fbihh.informatik.uni-hamburg.de (Vesselin Bontchev)
Subject: Re: Misinfo detected, A/R/ or name a Bulgarian virus (PC)

TYETISER@ssw02.ab.umd.edu (Tarkan Yetiser) writes:

> > and took a look at it. Gosh, I had to set up a special system just to
> > install it! The damn thing is not compatible with Sacker, SuperStor,
> > Disk Manager, any disks containing non-dos partitions, produces memory
> > faults with DR-DOS loaded high on a 386, etc...

>    The SPECIAL system is standard MS/PC DOS based PCs most people
> use. They are prepared using FDISK, and are not compressed or protected by
> an exotic security system. You seem to argue by the exception rather than
> the rule :-)

By "special" I meant that I was not able to find even -one- computer
here in our VTC, on which the package would run without problems... I
certainly don't call this a compatible program... And if you expect
that everybody's using just plain vanilla MS-DOS on DOS-only
partitioned hard disk, you make a severe mistake, as most shareware
vendors could tell you...

> > In non-installed state the program mostly refuses to run. However,
> > when I tried it with the -Scan only option, it did start and hung
> > the machine. During installation it insists that I boot from a
> > diskette (which is good), but when I booted from a diskette,
> > containing DR-DOS 6.0 and some of the fancy things that come with it,
> > the program thought that I have -not- booted from a dikette (which is
> > not good).

>   That's good. It is supposed to be installed properly first. As far as

It's good that it refuses to run when non-installed; I don't object to
that. However, it -does- try to run in the case I described and fails
miserably. And that's NOT good...

> DR-DOS is concerned, Bill Gates is not losing any sleep, neither are we:-)

Sleep maybe not, but he's losing a lot of money... :-) As to you, the
fact whether you are concerned or not doesn't bother me. However, it
was my duty to point out to the potential users of your package the
problems that it has. Which I did. I'm still standing firmly on every
single point I made in my critiques (except about the CPU, see below).
If somebody doesn't believe me, s/he is wellcome to download your
package and verify what I said him/herself. The only things that I
said and that cannot be verified by the average user are the
inabilities of the package to bypass every possible stealth virus and
that it is possible to design a virus which will bypass it. To those I
simply ask the people to believe me and to trust my experience in this
field. If they don't want to, it's their problem.

> > When trying to recognize my CPU type it reported a 286 while in fact
> > it was a 386. This, combined with the warning that the driver that the

>   Misinformation detected; Abort, Retry, or name an unheard-of Bulgarian
> virus :-) The program does not check CPU type to make such a distinction.

Correction acknowledged; I goofed. The wrong CPU type has been
reported by another buggy package which I tested the same day.

> > program generates may damage data if run on a different machine,
> > sounds pretty dangerous. How do you determine "different machine"?
> > What if I only change a printer controller? A disk controller? A hard
> > disk?

>   Well, the warning is a little too strong. Just make sure you use the
> device driver generated for the same computer only on the same machine.
> And if you repartition the hard drive, re-installation is a safe bet.
> On alike machines, it may work fine, but why not install it as intended.

Ah, so you mean that the driver is partition-dependent. Then you had
to clearly say so in the docs. Furthermore, if the user changes the
partition data, the driver should detect this and request
re-installation, not just "damage data".

> > The documentation makes some blatant claims and tends to present the
> > answer "this is a bad practice" or "we do not intend to support such
> > systems" almost always when it mentiones a problem.

>   Yes, the exceptions, but not the rules. It is honest about what it does
> not like so that the user has a chance not to use it. What do you think
> about the opinions in the docs? Are they totally wrong?

No, they are not totally wrong. They are even mostly correct. However,
as I said, they contain several blatant claims which help the user to
develop a false sense of secutity. Similarly to the advertisements
that I saw for UT... That's what made me angry - misleading the people
and showing false knowledge.

> > The "risk analisys test" presented there is just plain silly and
> > designed to promote the useage of anti-virus programs. To justify

>   It tells you at the very beginning that it is a simple tool to evalutate
> the vulnerability of your computers...; not a complete risk indicator.

IMO, it is misleading. I already explained why I think so; everybody
is free to make his/her own mind.

> >  Furthermore, the description of the methods that some stealth viruses
> >  use seem to show a good understanding of -some- stealth viruses (4096)
> >  but a remarkable lack of fantasy about what a stealth virus (a really

>    Wait a minute. The section about virus attack methods is intended to
> provide the unexposed users with preliminary information about how such
> beasts work. Not a comprehensive chapter on slealth viruses. Maybe, it is

It does not to describe how the stealth viruses work. All it needs is
to mention that it takes some measures to bypass the stealth viruses
of some kinds and that this is not always successful, so better don't
rely on it but always boot from a clean diskette when performing the
check.

BTW, since "bypassing stealth viruses" seems to become a fashion among
the anti-virus products: the most honest claim about this I have seen
in Frisk's documentation for VIRSTOP. It just says that the program is
able to bypass -some- stealth viruses.

> > good one) is able to achieve. If you describe me how do you detect
> > that a virus is present in memory, I'll show you that it is possible
> > to construct a virus, using only the currently known techiniques, wich
> > will pass undetected.

>   Why don't you describe the methods you have in mind, and I will see if I
> am allowed to tell you which ones defeat VDS scheme. Honest, I will.

Because there are too many of them and I don't have them neatly
described in one paper... Promised, I'll do so in the near future, but
the paper will be for internal use only, since it's obviously
dangerous to publish sich thing.

> Did you get a chance to see which pet viruses you have were able to spread
> on a system protected by VDS? I mean, without being detected.

I certainly won't spend the time to test all the viruses we have on
your product. It doesn't worth the effort. Besides, even if it does
detect all the known viruses, this does not mean anything - most good
scanners do the same. In order to prove that it fails to protect
against some virus -techniques-, I'll have to determine them and to
construct a virus which uses them - something that I'll never do
anyway. What I might do in the future is a set of programs that
demonstrate these techniques without being viruses. Unfortunately,
some techniques to attack integrity checkng software cannot be
demonstrated by non-viruses... :-( I could do the stealth
demonstrations however...

BTW, there's a kind of virus that will defeat -any- anti-virus system,
which is based on integrity checking -only-. This is the Darth Vader
virus. I know, you'll argue that it spreads so slowly that it's
unlikely to be successful in the wild...

>   Okay, I see what you had in mind. The problem with such verification is
> that if the signature for a stealth beast is not known to the verifier,
> the results are scary. We do not rely on simple signature checking in
> memory like some others do. I hope you are not saying that it is sufficient
> to do signature scan of memory.

Of course not, I even would not advise it as a cost-effective solution
in the long run. So, you are detecting not stealth viruses in
particular; you are detecting that something weird is installed in
memory in a weird way, right? OK, my claim is that you are not able to
do this successfully in all possible cases.

>    Please, take a closer look at it if you have time, and on a regular
> system most people use, not DR-DOS or other fancy things. As far as UT
> is concerned, just don't let a stealth fast infector UT does not have a
> signature for get control :-) Speaking of being secure...

"Most people" is a fuzzy set... :-) I still have the point that your
package is not widely compatible. I would like to emphasize that it
isn't mainly because it tries to bypass stealth viruses - something
which is a priori impossible without memory protection. Therefore why
not just instruct the user to perform the checks after a clean reboot
at least from time to time; to forget about stealth bypassing (or at
least not insist so much on it); make the package more compatible and
more secure?

As to UT, it -will- detect any stealth virus, if installed on a clean
system and used according to the manual. Something that cannot be said
about VDS...

> > the ASP Integrity Toolkit). It's very prone to companion viruses, since
> > any new files are automatically checksummed and the
> > checksum database updated. It doesn't know about the DOS files

>   Nope, that's incorrect. It handles companion viruses just fine.

Hm, did I mess something?... It didn't complain during my tests... Oh,
wait, I simulated a PATH-companion virus attack. Do you know about it
or are just checking for files with equal names in the same directory
only?

> > fragmenting attack. It's capabilities to bypass stealth viruses make
> > me think that it won't be compatible with local area networks...
> > And many other drawbacks. This certainly means that VDS DOES NOT
> > represent the strongest software solution currently available.

>    Sharp eye again, Vesselin. VDS is meant to be installed on stand-alone
> machines, not network servers. The identification part (VDSFSCAN) works on
> networks, even on CD-ROMs!  Sure, VDS is not for everyone. It sure is the

I'm not considering the scanner at all, since as you have said, the
strongest part is the integrity checker. (The scanner is certainly not
better than any of the already existing good ones, so this comparison
does not hold too.) And the integrity checker is -weak-, at least when
compared with other integrity checkers. And my point about
compatibility still hold: everybody who's using DR-DOS, Stacker,
DoubleDisk, SuperStor, DiskManager, LANs, Unix and other non-DOS
partitions, encrypted partitons (Norton's DiskReet), etc. should
better forget about your package, right? And all this just for the
suspicious ability to bypass -some- stealth viruses...

> strongest software solution available, maybe not as convenient as some
> other packages with flashy user interfaces. Not as expensive either :-)

I'm not discussing convenience or user interface. Even the
compatibility is not so important, after all. The really important
thing for a security program is to be secure and your package isn't.

>   Unzip VDS20T.zip onto a formateed, blank floppy diskette that can go in
> your A: drive. Boot from a clean, MS/PC DOS diskettes. Once you get to A>
> prompt, put in the diskette with the VDS stuf on it in drive A:, and type
> INSTALL and press ENTER. Follow the instructions. Simple and easy.

Forgot to mention that if the hard disk contains something different
from the plain vanilla MS-DOS the above procedure does not worth the
time pend for it...

>   If you have DR-DOS, Stacker, or some other non-standard stuff on your
> machine, please do not waste your time, VDS is not for such systems.

Exactly...

> Non-resident ones, well you
> know how common they are :-)

Boy, I have been in the anti-virus field since the Vienna virus and I
- -do- know how common it was!

> Device driver infectors, damn, how many of
> those do you have?

So many, that I don't remember all of them already... Let's see: Happy
New Year (3 variants), SVC (5.0a, 5.0b, and 6.0), Involuntary,
certainly some others whose names I can't recall right now...

> StarShip actually infects!

Note to you, Dave Chess, Fridrik Skulason, and everybody else: Yes,
StarShip actually infects.

> > Besides, the decoys seem to be launched only in the root directory, so
> > it's pretty easy to program the virus to avoid them.

>   Aha, a direct attack. Yes, you are correct, that is always possible.

Not always. The authors of UT claim that a really secure product must
resist a direct attack even if the intruder has full access to the
source code of the protection program. They also claim that UT is such
a program. Well, to be honest, there -is- a way to bypass UT. Even two
ways, but the first requires that the virus is already present before
the package is installed and that the scanner part of the package does
not detect it (i.e., that it is a new virus).

> > Speaking about root directories, why do you think that everybody's
> > command interpretter is the file C:\COMMAND.COM? Couldn't you
> > follow the COMSPEC variable? Several viruses do it better than you... :-)

>    Yes, we are aware of that. Just much simpler to do it this way.

"Simpler"?! What's wrong with getenv("COMSPEC")?! Or with looking for
SHELL= in CONFIG.SYS and SET COMSPEC= in AUTOEXEC.BAT? Or with letting
the user to type in the path and the name of the command interpretter?
Do you know how many people copy (or unarchive) their command
interpretter to a RAM disk and run in from there for speed?

>   I see. I am told (thanks Jon) that the book is $24. Just a dollar cheaper
> than the complete VDS package :-) It must be worth it since you seem to
> like it so much.

It is worth it... If I have to prepare a course about virus protection
for our students, I'll certainly base it on this book... The only
thing that I reproche it is that it fails to explain the dinosaur
formula it begins with... :-) In fact, the formula is explained in one
of Dr. Cohen's papers, but the book fails to mention this clearly...

> Is it true that it explores the effects of viruses in
> environments where sharing of info is desired, but transitivity cannot be
> contained? Situations like system A is secure, system B is secure, but when
> they interact, it is a different ball game?

Partially, yes. It also shows why the only ways to prevent viruses
entirely is to limit either sharing, or transitivity, or
functionality. And it explains this with examples and simple words,
unlike the papers of the same author. :-)

Regards,
Vesselin
- --
Vesselin Vladimirov Bontchev        Virus Test Center, University of Hamburg
Bontchev@Informatik.Uni-Hamburg.De  Fachbereich Informatik - AGN, rm. 107 C
Tel.:+49-40-54715-224, Fax: -226    Vogt-Koelln-Strasse 30, D-2000, Hamburg 54

------------------------------

Date:    27 Apr 92 11:58:33 +0000
From:    bontchev@fbihh.informatik.uni-hamburg.de (Vesselin Bontchev)
Subject: Re: On searchiong the original INt 13h (PC)

miguel@roxanne.nuclecu.unam.mx (Miguel de Icaza A.) writes:

> Have you ever tried Thunderbyte Scan? it has an option (-direct), this
> options allows TBSCAN to run and scan your disk without risk (no
> matter if a virus is resident in memory), because the programs
> includes a debugger (I think Vesselin calls this tunneling) which is
> able to find the entry point for Int 21h and Int 13h thus skipping any
> TSR monitor/virus loaded in RAM.

I have a stand-alone program which implements this. It's called TRACE.
Just run it with command-line arguments specifying (in hex) the
interrupt (and optionally the function number) which should be traced
and it outputs (to the standard output) the different addresses
through which the call passes (it identifies INTs, CALLs, JMPs, RETFs
and IRETs) with the names of the progeams that own the particular MCB.

If there is enough interest, I'll put it for download on our ftp site.
However, have in mind that this is not my program, I don't have its
source, I'm not supporting it, and I don't have a way to contact its
author. There's even no documentation.

As to what I'm calling "tunneling", it is the set of techniques that
allow to bypass monitoring programs. The interrupt tracing technique
is just one of them.

Regards,
Vesselin
- --
Vesselin Vladimirov Bontchev        Virus Test Center, University of Hamburg
Bontchev@Informatik.Uni-Hamburg.De  Fachbereich Informatik - AGN, rm. 107 C
Tel.:+49-40-54715-224, Fax: -226    Vogt-Koelln-Strasse 30, D-2000, Hamburg 54

------------------------------

Date:    27 Apr 92 12:20:41 +0000
From:    bontchev@fbihh.informatik.uni-hamburg.de (Vesselin Bontchev)
Subject: Re: Polymorphic List (PC)

JDG111@psuvm.psu.edu writes:

> The list of polymorphic viruses was somewhat incomplete.  I can think
> of at least 2 which weren't mentioned; there were probably a lot more.
> those two are the Bob Ross (aka Beta) virus and Screaming Fist virus,

The Bob virus? Don't make me laugh - it just changes a single byte in
the middle of the decryption routine... As to the Screaming Fist,
which one do you mean? We have three different variants here... The
third one seems encrypted, by I couldn't find any code for
polymorphism...

Regards,
Vesselin
- --
Vesselin Vladimirov Bontchev        Virus Test Center, University of Hamburg
Bontchev@Informatik.Uni-Hamburg.De  Fachbereich Informatik - AGN, rm. 107 C
Tel.:+49-40-54715-224, Fax: -226    Vogt-Koelln-Strasse 30, D-2000, Hamburg 54

------------------------------

Date:    24 Apr 92 14:20:51 -0400
From:    "Tarkan Yetiser" <TYETISER@ssw02.ab.umd.edu>
Subject: misconceptions about CRC in DDJ

   Hello netter,
   The following letter is submitted to Dr. Dobb's Journal. Since it is
addresses an issue relevant to viruses, I would like to share it with you.
- --------------------------------------------------------------------------
     Dear DDJ:

     I take exception to Mark R. Nelson's statement in File
Verification Using CRC, May 1992 that "it is possible that an
exceptionally clever virus will be able to defeat it [CRCMAN
verification]." He then continues, "Further modifications to the
program would improve its ability to fight viruses. For example,
just storing the length of the file along with its CRC would make
a virus programmer's job much more difficult, if not impossible."

     On page 65, Mr. Nelson also states, "The challenge to the
virus programmer would then be to add new bytes to the end of the
file so that the original CRC was restored." This is not only
misleading but also demonstrates that Mr. Nelson is not familiar
with a class of viruses known as "stealth" viruses. It is not
necessary for a virus to forge a scheme like CRC-32 to evade
detection. There are currently a number of viruses (e.g. 4096,
Fish-6, 512) that fool all such schemes, including those that
employ cryptographic checksums. It might surprise Mr. Nelson that
none of these viruses attempt a direct attack on checksum
algorithms, but they still succeed in almost every case!

     For any detection mechanism to work against such beasts, the
verifier must first establish a secure channel between the objects
on the disk and its memory buffers. The reason is simple: Stealth
viruses intercept disk access and undo the modifications they have
made. In other words, the verifier will get clean input. Therefore,
no matter how sophisticated the algorithm is, it will be fooled
every time.

     This does not mean that CRC-32 and such schemes cannot be used
to implement an integrity checker. In fact, they are quite adequate
as far as catching modifications, as long as the verifier can get
to the actual contents of the objects on the disk. If a stealth
virus is active in memory, other measures must be taken to gain
untampered access to the disk. Under MS/PC DOS, this is not as
trivial as it sounds; and it may be one of the reasons why there
are many professional software packages that deal with viruses.
Home-made solutions such as CRCMAN are simply not adequate. Mr.
Nelson should have at least advised his readers to boot from a
clean, write-protected floppy diskette and then run CRCMAN from the
same diskette (in case the copy on the hard disk is infected).
Otherwise, CRCMAN not only fails to find any modifications, but
also may spread the infection to all programs it checks.

     It is disappointing to read such misconceptions in a
respectable computer publication such as DDJ. Besides the problem
mentioned above, the article was excellent. Keep up the good work.


P.S.: I must express my admiration for Mr. Nelson's Data
      Compression Book.

Regards,

Tarkan Yetiser
VDS Advanced Research Group               P.O. Box 9393
(410) 247-7117                            Baltimore, MD 21228
e-mail:  tyetiser@ssw02.ab.umd.edu

------------------------------

Date:    27 Apr 92 09:20:34 +0000
From:    bontchev@fbihh.informatik.uni-hamburg.de (Vesselin Bontchev)
Subject: Re: A kinder gentler Virus-L

seborg@CSRC.NCSL.NIST.GOV (Brian Seborg) writes:

> often discussed as being important.  For example, is a product which
> identifies 3000 virus strains and is capable of scanning faster than
> any other product necessarily better?  I would say maybe, but then

Well, IMHO it is actually better than a product that identifies 100
virus strains and is slowlier... However, the exact thing to say in
this case is that it is a better -scanner-, not a better anti-virus
product.

> other issues.  For example.  A power user may find CPAV to be the best
> because s/he likes the interface and the fact that there are so many
> options to configure.  A less literate user may like SCAN since it is

I haven't had the possibility to test the new version of CPAV (1.2),
but the old one (1.1) is so buggy that it is dangerous to use... And,
if it does not detect viruses well it is a bad product, regardless how
good the user interface is... The opposite is not necessarily true, of
course.

> learn an interface.  A hacker may like some of Padgett's, Yetiser's,
> Skulason, or UT.  No matter which product there may be someone who
> feels it is the best for him/her.  So let's get back on track.

The problem with the anti-virus software is that the average user is
usually unable to tell how good the product is (i.e., how well it
stops viruses). And, if a product is not good for this job, everything
else is non-essential.

> Also, I find it discomforting to see people with new ideas such as
> Alexander Shehovtsov, and Tarken Yetiser being immediately flamed by
> someone posting that there is obviously a way around the method
> suggested.

"Flamed" is not the right word. We're just pointing out the weak sides
of the ideas. Since most people don't have the necessary level of
expertise in this field to discover these weak sides themselves, it's
our duty to point them out.

> Any technique which yields new ways to prevent viruses
> should be encouraged.

Of course. But people should be also told about the existing ways to
bypass the prevention, or they may get a false sense of security.

> systems from 100% of the viruses.  But, it's still fun to try :-)!  I
> think that if we had accepted Fred Cohen's hypothesis that it is

It's a theorem, not a hypothesis. It has been proved by Fred Cohen
himself.

> impossible to build a virus detector that is 100% effective and so why
> bother, then we would be in a pretty bad fix right now.  What has
> happened is that we have accepted this hypothesis, but said, well, how
> about 95% of all viruses?

Oh, Cohen's theorem does not forbid us to do even better! It does not
forbid us to create a program which can detect all viruses, trojans,
worms, and bugs, but is unable to identify which of them are viruses
and which are not... :-)

> ideas.  If no one ever shared their failures then we would all be
> doomed to repeat them!

Correct, but if no one ever pointed out that those are actually
failures then we would all still rely on them!

> Also, I would like to call for a more robust
> FAQ.  It is a good start, but given the continuing onslaught of common
> questions not addressed by the FAQ it is obvious that it needs to be a
> living document which continues to grow and become more complete.  I
> would be happy to enter into a discussion with others on making
> additions which would be mutually beneficial to all parties concerned.

The FAQ list is flexible. If you feel that something is wrong or
incomplete, or just want to submit new entries, you could contact the
moderator of Virus-L/comp.virus.

Regards,
Vesselin
- --
Vesselin Vladimirov Bontchev        Virus Test Center, University of Hamburg
Bontchev@Informatik.Uni-Hamburg.De  Fachbereich Informatik - AGN, rm. 107 C
Tel.:+49-40-54715-224, Fax: -226    Vogt-Koelln-Strasse 30, D-2000, Hamburg 54

------------------------------

Date:    27 Apr 92 12:42:32 +0000
From:    bontchev@fbihh.informatik.uni-hamburg.de (Vesselin Bontchev)
Subject: Why a good virus is a bad idea?

Hello, everybody!

I am writing an article about the possibility to use virus techniques
for something useful. I am already aware with Dr. Cohen's ideas on
this subject. I am also aware that almost everybody else considers
this to be a bad idea. I would like to present a detailed, objective
and non-biased look on the subject. So, could you please send me a
short note, indicating why you consider the usage of virus techniques
to be a bad idea.

Please e-mail to me directly and do not post to this newsgroup and/or
start ideologic wars. When my article is ready I'll make it publicly
available and we coudl argue -then-.

Currently I am aware of the following arguments:

1) It is unethical to modify somebody's data without his/her
knowledge. In the same time, modifying a program could mean that the
owner of the program loses his/her rights for technical support,
ownership, or copyright.

2) Once released, you have no control on how the virus will spread; it
may reach a system about which you know nothing and on which it might
cause non-intentional damage.

3) A bad guy could get a copy of the virus and modify it to include
something malicious. In the same time, the anti-virus programs will
have to distinguish between "good" and "bad" viruses, which is
essentially impossible.

4) A virus will eat up disk space and time resources unnecessarily
while it spreads.

5) A virus could contain bugs which might damage something. Any
program could be buggy, but the virus is a self-spreading buggy
program.

If somebody can think about other arguments why a "good" virus is a
bad idea, please e-mail them to me.

Regards,
Vesselin
- --
Vesselin Vladimirov Bontchev        Virus Test Center, University of Hamburg
Bontchev@Informatik.Uni-Hamburg.De  Fachbereich Informatik - AGN, rm. 107 C
Tel.:+49-40-54715-224, Fax: -226    Vogt-Koelln-Strasse 30, D-2000, Hamburg 54

------------------------------

Date:    Sat, 25 Apr 92 22:00:26 -0700
From:    rslade@sfu.ca (Robert Slade)
Subject: Checklist part 11



920425   PRTCKLB.CVP

                    Antiviral checklist - part 11

                     At software install/change:

This area should not require any definition.  I should, however,
mention one thing in regard to "change".  There are, unfortunately,
still a number of programs which modify their own code when a change
is made in the configuration.  I am not including these minor
amendments in this section's definition of "change".  When changes
have been made which affect the size or composition of a program
file, the program should be backed up (either by itself or as part of
a full "system" backup) and the printout list of program file sizes
should be redone.  The following items, however, are recommended more
in the case of installation of new software or a major upgrade.

_ Protect original

I have mentioned before that I feel commercial software vendors are
negligent, in the face of an obvious and present danger, in
continuing to ship software on disks which are not only writable, but
not even protected.  Always protect the original disk immediately you
remove it from the package.  Following this procedure will ensure
that you know whether the new software infected your machine, or the
machine infected the software.

_ Install from protected backup

With the original disk protected, make a backup copy.  Then, protect
the backup copy, and perform the installation from the protected
backup.  You are allowed to make an archival backup, and this
procedure allows you to store the "original" original offsite, and
the "backup" original new the computer, in case of the need for
disaster recovery.

Unfortunately, software manufacturers still insist on various types
of copy protection schemes.  Recently, the most popular have involved
writing changes to the program based on a "registration" of your name
and company -- on the original disk.  The practice of using a
"backup" original will allow you, in this case, to keep the
manufacturer's software disk protected.  However, there are still
some schemes that require reading from and writing to the
manufacturer's disk.  Whenever possible this practice should be
avoided.

As in a previous column, I am sure that some will object that it is
far easier to simply scan the disks for viri and "have done with it".
I do, in fact, recommend scanning all disks.  Note that both original
and "backup" original should be scanned *after they have been
protected*.  Also to my previous reasons regarding not stressing the
use of scanners, may I add the fact that scanners, by their nature,
will never be able to protect you against all viri, although they
should protect you against most.

copyright Robert M. Slade, 1992   PRTCKLB.CVP   920425

=============
Vancouver                               | "Remember, by the
Institute for  Robert_Slade@sfu.ca      |  rules of the game, I
Research into  rslade@cue.bc.ca         |  *must* lie.  *Now* do
User           CyberStore Dpac 85301030 |  you believe me?"
Security       Canada V7K 2G6           |    Margaret Atwood


------------------------------

End of VIRUS-L Digest [Volume 5 Issue 96]
*****************************************
